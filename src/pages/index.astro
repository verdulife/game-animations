---
import Layout from "@/layouts/Layout.astro";
import Card from "@/components/Card.astro";

const cards = [
  {
    title: "Card 1",
    content: "Lorem ipsum dolor",
  },
  {
    title: "Card 2",
    content: "Sed do eiusmod",
  },
  {
    title: "Card 3",
    content: "Ut enim ad",
  },
  {
    title: "Card 4",
    content: "Duis aute irure",
  },
  {
    title: "Card 5",
    content: "Excepteur sint",
  },
  {
    title: "Card 6",
    content: "Curabitur pretium",
  },
  {
    title: "Card 7",
    content: "Nulla gravida",
  },
  {
    title: "Card 8",
    content: "Nullam varius",
  },
  {
    title: "Card 9",
    content: "Integer in",
  },
  {
    title: "Card 10",
    content: "Quisque volutpat",
  },
];
---

<Layout>
  <section
    class="flex h-svh snap-y snap-proximity flex-col items-center gap-12 overflow-y-auto scroll-smooth"
  >
    {cards.map((card) => <Card class="card">{card.content}</Card>)}
    {cards.map((card) => <Card class="card">{card.content}</Card>)}
    {cards.map((card) => <Card class="card">{card.content}</Card>)}
  </section>

  <div
    class:list={[
      "fixed top-1/2 -z-10 h-42 w-full -translate-y-1/2 text-4xl",
      "before:bg-knc-red before:absolute before:top-1/2 before:left-0 before:size-20 before:-translate-1/2 before:-scale-x-100 before:rotate-45 before:rounded before:shadow-2xl before:shadow-black",
      "after:bg-knc-red after:absolute after:top-1/2 after:right-0 after:size-20 after:translate-x-1/2 after:-translate-y-1/2 after:rotate-45 after:rounded after:shadow-2xl after:shadow-black",
    ]}
  >
  </div>

  <button class="text-knc-dark fixed top-0 right-0 p-6 text-6xl"> + </button>
</Layout>

<script>
  const button = document.querySelector("button");
  const localListRaw = window.localStorage.getItem("knc-list");
  let localList = [];

  if (!localListRaw)
    window.localStorage.setItem("knc-list", JSON.stringify([]));
  else {
    localList = JSON.parse(localListRaw);
  }

  console.log(localList);

  const section = document.querySelector("section") as HTMLElement;
  const maxSpeed = 40;
  let speed = 0;
  let playing = false;

  function animateRoulette() {
    const scrolledAmount = section.scrollTop + section.offsetHeight;

    if (scrolledAmount >= section.scrollHeight) {
      section.scrollTo({ top: 0 });
    }

    section.scrollBy({ top: speed });

    if (speed >= 1) requestAnimationFrame(animateRoulette);
    if (!playing && speed <= 1) speed = 1;

    if (playing && speed < maxSpeed) speed += 0.1;
    if (!playing && speed >= 2) speed -= 0.1;
    else if (!playing && speed < 2) speed -= 1;
    if (speed <= 1) {
      section.classList.add("snap-y");
      section.classList.add("scroll-smooth");
    }
  }

  window.addEventListener("keydown", ({ key }) => {
    if (key === " ") startRoulette();
  });

  function startRoulette() {
    section.classList.remove("snap-y");
    section.classList.remove("scroll-smooth");
    playing = true;
    speed = 1;
    animateRoulette();

    const randomTimer = randomIntFromInterval(4, 6) * 1000;
    setTimeout(stopRoulette, randomTimer);
  }

  function stopRoulette() {
    playing = false;
  }

  section.addEventListener("click", () => {
    if (!playing) startRoulette();
  });

  section.scrollBy({ top: 10 });

  function randomIntFromInterval(min: number, max: number) {
    return Math.random() * (max - min) + min;
  }
</script>
